{"title":"Aurora主题美化","uid":"a549e6a1f63660f07ff217565c816899","slug":"Aurora主题美化","date":"2022-06-27T13:55:58.000Z","updated":"2022-07-02T05:08:12.696Z","comments":true,"path":"api/articles/Aurora主题美化.json","keywords":"Java study learn 学习","cover":[],"content":"<p>Aurora主题美化，鼠标移动特效</p>\n<span id=\"more\"></span>\n\n<h1 id=\"1-js代码\"><a href=\"#1-js代码\" class=\"headerlink\" title=\"1.js代码\"></a>1.js代码</h1><p>路径为：node_modules&#x2F;hexo-theme-aurora&#x2F;source&#x2F;static&#x2F;js&#x2F;</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">(function fairyDustCursor() &#123;\n  \n  var possibleColors &#x3D; [&quot;#D61C59&quot;, &quot;#E7D84B&quot;, &quot;#1B8798&quot;]\n  var width &#x3D; window.innerWidth;\n  var height &#x3D; window.innerHeight;\n  var cursor &#x3D; &#123;x: width&#x2F;2, y: width&#x2F;2&#125;;\n  var particles &#x3D; [];\n  \n  function init() &#123;\n    bindEvents();\n    loop();\n  &#125;\n  \n  &#x2F;&#x2F; Bind events that are needed\n  function bindEvents() &#123;\n    document.addEventListener(&#39;mousemove&#39;, onMouseMove);\n    document.addEventListener(&#39;touchmove&#39;, onTouchMove);\n    document.addEventListener(&#39;touchstart&#39;, onTouchMove);\n    \n    window.addEventListener(&#39;resize&#39;, onWindowResize);\n  &#125;\n  \n  function onWindowResize(e) &#123;\n    width &#x3D; window.innerWidth;\n    height &#x3D; window.innerHeight;\n  &#125;\n  \n  function onTouchMove(e) &#123;\n    if( e.touches.length &gt; 0 ) &#123;\n      for( var i &#x3D; 0; i &lt; e.touches.length; i++ ) &#123;\n        addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[Math.floor(Math.random()*possibleColors.length)]);\n      &#125;\n    &#125;\n  &#125;\n  \n  function onMouseMove(e) &#123;    \n    cursor.x &#x3D; e.clientX;\n    cursor.y &#x3D; e.clientY;\n    \n    addParticle( cursor.x, cursor.y, possibleColors[Math.floor(Math.random()*possibleColors.length)]);\n  &#125;\n  \n  function addParticle(x, y, color) &#123;\n    var particle &#x3D; new Particle();\n    particle.init(x, y, color);\n    particles.push(particle);\n  &#125;\n  \n  function updateParticles() &#123;\n    \n    for( var i &#x3D; 0; i &lt; particles.length; i++ ) &#123;\n      particles[i].update();\n    &#125;\n    \n    for( var i &#x3D; particles.length -1; i &gt;&#x3D; 0; i-- ) &#123;\n      if( particles[i].lifeSpan &lt; 0 ) &#123;\n        particles[i].die();\n        particles.splice(i, 1);\n      &#125;\n    &#125;\n    \n  &#125;\n  \n  function loop() &#123;\n    requestAnimationFrame(loop);\n    updateParticles();\n  &#125;\n  \n  function Particle() &#123;\n\n    this.character &#x3D; &quot;*&quot;;\n    this.lifeSpan &#x3D; 120; &#x2F;&#x2F;ms\n    this.initialStyles &#x3D;&#123;\n      &quot;position&quot;: &quot;fixed&quot;,\n      &quot;top&quot;: &quot;0&quot;, &#x2F;&#x2F;必须加\n      &quot;display&quot;: &quot;block&quot;,\n      &quot;pointerEvents&quot;: &quot;none&quot;,\n      &quot;z-index&quot;: &quot;10000000&quot;,\n      &quot;fontSize&quot;: &quot;20px&quot;,\n      &quot;will-change&quot;: &quot;transform&quot;\n    &#125;;\n\n    this.init &#x3D; function(x, y, color) &#123;\n\n      this.velocity &#x3D; &#123;\n        x:  (Math.random() &lt; 0.5 ? -1 : 1) * (Math.random() &#x2F; 2),\n        y: 1\n      &#125;;\n      \n      this.position &#x3D; &#123;x: x - 10, y: y - 20&#125;;\n      this.initialStyles.color &#x3D; color;\n      console.log(color);\n\n      this.element &#x3D; document.createElement(&#39;span&#39;);\n      this.element.innerHTML &#x3D; this.character;\n      applyProperties(this.element, this.initialStyles);\n      this.update();\n      \n      document.body.appendChild(this.element);\n    &#125;;\n    \n    this.update &#x3D; function() &#123;\n      this.position.x +&#x3D; this.velocity.x;\n      this.position.y +&#x3D; this.velocity.y;\n      this.lifeSpan--;\n      \n      this.element.style.transform &#x3D; &quot;translate3d(&quot; + this.position.x + &quot;px,&quot; + this.position.y + &quot;px,0) scale(&quot; + (this.lifeSpan &#x2F; 120) + &quot;)&quot;;\n    &#125;\n    \n    this.die &#x3D; function() &#123;\n      this.element.parentNode.removeChild(this.element);\n    &#125;\n    \n  &#125;\n  \n  function applyProperties( target, properties ) &#123;\n    for( var key in properties ) &#123;\n      target.style[ key ] &#x3D; properties[ key ];\n    &#125;\n  &#125;\n  \n  init();\n&#125;)();</code></pre>\n\n<h1 id=\"2-引用js文件\"><a href=\"#2-引用js文件\" class=\"headerlink\" title=\"2.引用js文件\"></a>2.引用js文件</h1><p>路径文件：node_modules&#x2F;hexo-theme-aurora&#x2F;layout&#x2F;index.ejs </p>\n<p>放在<code>&lt;body&gt;&lt;/body&gt;</code>标签中</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&#123;% if theme.sakura.enable %&#125;\n\t&lt;script async src&#x3D;&quot;&#x2F;static&#x2F;js&#x2F;（前面js代码文件的名字）.js&quot;&gt;&lt;&#x2F;script&gt; \n&#123;% endif %&#125;</code></pre>\n\n<h1 id=\"3-开启配置\"><a href=\"#3-开启配置\" class=\"headerlink\" title=\"3.开启配置\"></a>3.开启配置</h1><p>在 _config.aurora.yml 文件中添加</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">sakura:\n  enable: true</code></pre>\n\n<p><img src=\"/post/Aurora%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/tu1.png\"></p>\n","text":"Aurora主题美化，鼠标移动特效 1.js代码路径为：node_modules&#x2F;hexo-theme-aurora&#x2F;source&#x2F;static&#x2F;js&#x2F; (function fairyDustCursor() &#123; var...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"hexo","slug":"hexo","count":1,"path":"api/categories/hexo.json"}],"tags":[{"name":"Aurora","slug":"Aurora","count":1,"path":"api/tags/Aurora.json"},{"name":"美化","slug":"美化","count":1,"path":"api/tags/美化.json"},{"name":"鼠标","slug":"鼠标","count":1,"path":"api/tags/鼠标.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-js%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">1.js代码</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%BC%95%E7%94%A8js%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">2.引用js文件</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E5%BC%80%E5%90%AF%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3.开启配置</span></a></li></ol>","author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}},"mapped":true,"prev_post":{"title":"Jetbrains Intellij IDEA 安装","uid":"20520177646e4b84eee9d8a683bf9389","slug":"Jetbrains-Intellij-IDEA-安装","date":"2022-07-02T02:36:07.000Z","updated":"2022-07-02T06:14:35.774Z","comments":true,"path":"api/articles/Jetbrains-Intellij-IDEA-安装.json","keywords":"Java study learn 学习","cover":[],"text":"IDEA安装 IDEA 全称 IntelliJ IDEA，是Java编程语言开发的集成环境(IDE)。IntelliJ在业界被公认为最好的Java开发工具，尤其在智能代码助手、代码自动提示、重构、J2EE支持、各类版本工具(git、svn等)、JUnit、CVS整合、代码分析、 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Java","slug":"Java","count":1,"path":"api/categories/Java.json"}],"tags":[{"name":"开发工具","slug":"开发工具","count":1,"path":"api/tags/开发工具.json"},{"name":"环境","slug":"环境","count":1,"path":"api/tags/环境.json"}],"author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}}},"next_post":{"title":"多版本JDK安装环境配置","uid":"746fec1957cb717ca775450a91b2b681","slug":"多版本JDK安装环境配置","date":"2022-06-27T10:45:04.000Z","updated":"2022-06-29T13:12:11.885Z","comments":true,"path":"api/articles/多版本JDK安装环境配置.json","keywords":"Java study learn 学习","cover":[],"text":"多版本jdk安装 环境配置 A.LTS版本JDKLTS：long-term support LTS版本的JDK有3个：分别是jdk8，jdk11，jdk17。 版本 LTS时间 JDK8 2030年12月 JDK11 2026年9月 JDK17 2024年9月 目前在使用jdk8...","link":"","photos":[],"count_time":{"symbolsCount":609,"symbolsTime":"1 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":8,"path":"api/categories/JavaSE.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"环境安装","slug":"环境安装","count":2,"path":"api/tags/环境安装.json"}],"author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}}}}