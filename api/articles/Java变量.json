{"title":"Java变量","uid":"79af7de75153f420d37fd8766e7c54b8","slug":"Java变量","date":"2022-07-02T12:02:56.000Z","updated":"2022-07-02T12:14:03.669Z","comments":true,"path":"api/articles/Java变量.json","keywords":null,"cover":[],"content":"<h2 id=\"A-定义\"><a href=\"#A-定义\" class=\"headerlink\" title=\"A.定义\"></a>A.定义</h2><p>存储在内存中的值并且能够发生改变，数据需要放在内存中才可以进行计算。变量本质是计算机内存中代表一个”可操作的存储空间“，位置是确定的，但里面的值是不确定的可以改变。通过变量名来访问该对应的存储的内存空间里面的值（变量名存储的是这个数据存在内存的地址）从而操作这个内存存储的值。</p>\n<p>存储在内存里面的数据是瞬时状态的（关机之后就没有了），保存在磁盘的是持久状态的。</p>\n<p>由于计算机内存有限，一般为4G或8G，需要尽可能的节省内存空间，就需要通过变量来存储以达到节省内存空间的目的。</p>\n<p>【字节】</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">字节是内存中最小的存储单位，一个字节byte由8位组成，8个bit，比如6转换成二进制 0000 0110</code></pre>\n\n<h2 id=\"B-数据类型\"><a href=\"#B-数据类型\" class=\"headerlink\" title=\"B.数据类型\"></a>B.数据类型</h2><p>java是一个强类型语言，每个变量必须声明数据类型，变量的数据类型决定了变量占据的存储空间的大小！通俗讲就是你要根据数据的大小依据数据类型为这个变量开辟合适大小的空间去存储，达到节约空间的目的</p>\n<p>比如:int a&#x3D;10;表示变量a存储空间的大小是4个字节，也就是说int在内存中开辟了4个字节的空间</p>\n<p>​    \t\t<font color=\"red\">数据类型分为基本类型和引用类型</font></p>\n<p><img src=\"/post/Java%E5%8F%98%E9%87%8F/tu1.png\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * \n * 变量，存储在内存中的数据，并且可以发生改变\n *\n *&#x2F;\npublic class Test1 &#123;\n\tpublic static void main(String[] args) &#123;\n\t\t&#x2F;&#x2F;需求：需要将10存储在计算机内存中运算\n\t\t&#x2F;&#x2F;1、声明变量：依据数据的大小，根据数据类型开辟合适大小的空间 int 是4个字节存储整数\n\t\tint a;\t\t\n\t\t&#x2F;&#x2F;2、赋值：把左边的10通过&#x3D;赋给右边\n\t\ta&#x3D;10;\t\t\t\n\t\t&#x2F;&#x2F;3、使用变量：使用变量里面的值进行计算\n\t\ta&#x3D;a+5;\n\t\tSystem.out.println(a);\n\t\t\n\t\t&#x2F;&#x2F;声明并赋值进行初始化\n\t\tint b&#x3D;20;\n\t\t\n\t\tint c&#x3D;a+b;\n\t\tSystem.out.println(&quot;a+b的和：&quot;+c);\n\t&#125;\n&#125;</code></pre>\n\n\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class Test2 &#123;\n\tpublic static void main(String[] args) &#123;\n\t\t&#x2F;&#x2F;存储整数，byte short int long\n\t\tbyte num1 &#x3D; 127;&#x2F;&#x2F;1个字节 -128~127之间\n\t\tshort num2 &#x3D; 126;&#x2F;&#x2F;2个字节 \n\t\tint age &#x3D; 27; &#x2F;&#x2F;4个字节，java默认int类型\n\t\tlong money &#x3D; 23232323232L;&#x2F;&#x2F; 8个字节存储空间 长整型\n\t\t\n\t\tchar sex &#x3D; &#39;s&#39;;&#x2F;&#x2F;字符类型 2个字节\n\t\t\n\t\t&#x2F;&#x2F;浮点类型\n\t\t&#x2F;&#x2F;浮点类型不是一个准确的数！float精确到第七位。double精确度是float的两倍所以叫双精度类型\n\t\tfloat fenshu1 &#x3D; 98.7F;&#x2F;&#x2F;单精度类型 4个字节\n\t\tdouble fenshu2 &#x3D; 93.22;&#x2F;&#x2F;双精度类型 8个字节 Java默认是double\n\t\t\n\t\t&#x2F;&#x2F;布尔类型，只能存放true&#x2F;false\n\t\tboolean hege &#x3D; false;&#x2F;&#x2F;1个bit(1个bit至少也要1byte存储)\n\t\t\n\t\t&#x2F;&#x2F;字符串类型，注意：字符串不是基本类型！它是特殊的引用类型\n\t\tString sexs &#x3D; &quot;male&quot;;\n\t\tString name2 &#x3D; &quot;&quot;; &#x2F;&#x2F;它也是字符串！空字符串\n\t&#125;\n&#125;</code></pre>\n\n<p>数据类型的存储范围：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th align=\"center\">关键字</th>\n<th align=\"center\">占用字节</th>\n<th align=\"center\">取值范围</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">布尔型</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">1</td>\n<td align=\"center\">true，false</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td align=\"center\">字节型</td>\n<td align=\"center\">byte</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-128 ~ 127</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">短整型</td>\n<td align=\"center\">short</td>\n<td align=\"center\">2</td>\n<td align=\"center\">-2^15^ ~ 2^15^-1</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">整型</td>\n<td align=\"center\">int</td>\n<td align=\"center\">4</td>\n<td align=\"center\">-2^31^ ~ 2^31^-1</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">长整型</td>\n<td align=\"center\">long</td>\n<td align=\"center\">8</td>\n<td align=\"center\">-2^63^ ~ 2^63^-1</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">字符型</td>\n<td align=\"center\">char</td>\n<td align=\"center\">2</td>\n<td align=\"center\">0 ~ 2^16^-1</td>\n<td align=\"center\">‘\\u0000’</td>\n</tr>\n</tbody></table>\n<h2 id=\"C-变量命名规则\"><a href=\"#C-变量命名规则\" class=\"headerlink\" title=\"C.变量命名规则\"></a>C.变量命名规则</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.首字母可以以下划线、英文字母、$符号开头，其他部分可以是数字、字母、下划线、$符号；比如_name age age2 $name</p>\n<p>2.如果以两个单词组成的，以驼峰命名法命名，比如myName</p>\n<p>3.变量名最好有意义，不要写abc，方便别人看懂你的代码</p>\n<p>4.不要有关键字，比如int  public等</p></blockquote>\n<h2 id=\"D-变量种类\"><a href=\"#D-变量种类\" class=\"headerlink\" title=\"D.变量种类\"></a>D.变量种类</h2><h3 id=\"1-局部变量\"><a href=\"#1-局部变量\" class=\"headerlink\" title=\"1.局部变量\"></a>1.局部变量</h3><p>在方法或者语句块内部定义的变量，叫做局部变量，生命周期从声明的位置到方法或者语句块执行完毕就会被销毁。</p>\n<p>局部变量必须先声明复制才能使用</p>\n<h3 id=\"2-全局变量\"><a href=\"#2-全局变量\" class=\"headerlink\" title=\"2.全局变量\"></a>2.全局变量</h3><p>也叫成员变量或者叫实例变量，在类里面或者方法外面定义的变量叫全局变量，作用域整个类中，从属于对象，</p>\n<p>生命周期伴随着对象始终，如果不自动初始化，它会自动初始化该变量</p>\n<h3 id=\"3-静态变量\"><a href=\"#3-静态变量\" class=\"headerlink\" title=\"3.静态变量\"></a>3.静态变量</h3><p>也叫类变量，用static修饰，从属于类，在类加载的时候就会被初始化，生命周期从类加载到类卸载</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">static int c ;</code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * \n * 全局变量和局部变量的区别\n *\n *&#x2F;\npublic class Test3 &#123;\n\tint a&#x3D;10;\t&#x2F;&#x2F;全局变量，作用于整个类中\n\tint b;\n\tstatic name;\n\tstatic int c ;\n\t\n\tpublic static void main(String[] args) &#123;\n\t\tint b&#x3D;10; &#x2F;&#x2F;在方法内部或代码块定义的是局部变量。只作用于main方法里面\n\t\tint a&#x3D;15;  &#x2F;&#x2F;局部变量和全局变量可以重名\n\t\t\n\t\tSystem.out.println(&quot;局部变量b：&quot;+b);\n\t\t&#x2F;&#x2F;当局部变量和全局变量重名的情况下，就近原则，使用局部变量\n\t\tSystem.out.println(&quot;局部变量a：&quot;+a);\n\t\tTest3 test &#x3D; new Test3();\n\t\tSystem.out.println(&quot;全局变量a：&quot;+test.a);\n\t\t\n\t\tSystem.out.println(&quot;静态方法直接调用静态变量：&quot;+c);\n\t\tSystem.out.println(&quot;静态变量可以通过类名调用&quot;+test.c);\n\t\t&#x2F;&#x2F;由于全局变量是对象调用的引用类型，在堆内存中每月初始值\n\t\tSystem.out.println(test.name);\n\t\tSystem.out.println(test.d);\n\t&#125;\n\t&#x2F;&#x2F;@SuppressWarnings(&quot;unused&quot;)\n\tprivate void show() &#123;\n\t\t&#x2F;&#x2F;System.out.println(&quot;全局变量a：&quot;+a);\n\t\t&#x2F;&#x2F;在这调用不到main方法的局部变量b\n\t\t&#x2F;&#x2F;System.out.println(&quot;局部变量b：&quot;+b);\n\t\tSystem.out.println(&quot;静态变量可以通过类名调用&quot;+test.c);\t\n\t&#125;\n&#125;</code></pre>\n\n<p>​\t</p>\n<p>​\t <font color=\"red\">基本数据类型的数据都是在栈内存中存储，引用类型的数据都是在对内存中存储</font></p>\n<h2 id=\"E-数据转换\"><a href=\"#E-数据转换\" class=\"headerlink\" title=\"E.数据转换\"></a>E.数据转换</h2><p><font color=\"red\">一定是数值之间才可以进行转换!</font></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">int a&#x3D;10;\ndouble b&#x3D;9.8;\nint c&#x3D;(int) b; &#x2F;&#x2F;由于大的空间的值不能放到小的空间，需要强制类型转换，但会丢失精度\nSystem.out.println(c);&#x2F;&#x2F;9\ndouble d&#x3D;a;&#x2F;&#x2F;把小的空间的值放到更大的空间，能放下，叫自动转换\nSystem.out.println(d);&#x2F;&#x2F;10.0\n\n&#x2F;&#x2F;扩展：任何数据+&quot;&quot;都变成字符串类型，不能再运算\nString str&#x3D;123+&quot;&quot;;</code></pre>\n\n<h2 id=\"F-控制台输入\"><a href=\"#F-控制台输入\" class=\"headerlink\" title=\"F.控制台输入\"></a>F.控制台输入</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.Scanner;\n\npublic class Test5 &#123;\n\tpublic static void main(String[] args) &#123;\n\t\ttry (&#x2F;&#x2F;创建input对象\n\t\tScanner input &#x3D; new Scanner(System.in)) &#123;\n\t\t\tSystem.out.print(&quot;请输入姓名：&quot;);\n\t\t\tString name&#x3D;input.next();&#x2F;&#x2F;next()输入字符串\n\t\t\tSystem.out.print(&quot;请输入年龄：&quot;);\n\t\t\tint age&#x3D;input.nextInt();&#x2F;&#x2F;nextInt()输入整数\n\t\t\t\n\t\t\tSystem.out.println(&quot;我的名字是&quot;+name+&quot;，我的年龄是&quot;+age+&quot;岁！&quot;);\n\t\t&#125;\n\t&#125;\n&#125;</code></pre>\n\n<h2 id=\"G-运算符\"><a href=\"#G-运算符\" class=\"headerlink\" title=\"G.运算符\"></a>G.运算符</h2><h3 id=\"a-算术运算符\"><a href=\"#a-算术运算符\" class=\"headerlink\" title=\"a.算术运算符\"></a>a.算术运算符</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">+ - * &#x2F; %</code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">int a&#x3D;7;\nint b&#x3D;3;\n\nint r1&#x3D;a+b;&#x2F;&#x2F;10\nint r2&#x3D;a-b;&#x2F;&#x2F;4\nint r3&#x3D;a*b;&#x2F;&#x2F;21\nint r4&#x3D;7&#x2F;3;&#x2F;&#x2F;2\ndouble r5&#x3D;7&#x2F;3.0;&#x2F;&#x2F;2.3333333333333335\nSystem.out.println(r4);\nSystem.out.println(r5);\n&#x2F;&#x2F;取余\nint r6&#x3D;7%3;&#x2F;&#x2F;1</code></pre>\n\n\n\n<h3 id=\"b-条件运算符\"><a href=\"#b-条件运算符\" class=\"headerlink\" title=\"b.条件运算符\"></a>b.条件运算符</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">  a&gt;b\n  a&lt;b\n  a&gt;&#x3D;b\n  a&lt;&#x3D;b\n  a&#x3D;&#x3D;b\t两个值比较\n  a!&#x3D;b\t不等于\n  得到的结果是Boolean类型，结果为true&#x2F;false\n      int a&#x3D;3;\nint b&#x3D;7;\n\nboolean r1&#x3D;a&#x3D;&#x3D;b;&#x2F;&#x2F;false\nboolean r2&#x3D;a!&#x3D;b;&#x2F;&#x2F;true\nboolean r3&#x3D;a&gt;b;&#x2F;&#x2F;true\nSystem.out.println(r1);\nSystem.out.println(r2);\n      </code></pre>\n\n\n\n<h3 id=\"c-逻辑运算符\"><a href=\"#c-逻辑运算符\" class=\"headerlink\" title=\"c.逻辑运算符\"></a>c.逻辑运算符</h3><p>与或非</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&amp;&amp;   \t并且：条件A&amp;&amp;条件B   条件A和条件B都满足为true，才会返回true</p>\n<p>||  \t  或者：条件A||条件B\t条件A和条件B其中一个满足为true，返回结果为true</p>\n<p>！         非：取反      ！&#x3D;不等于  ！true返回false</p></blockquote>\n<h4 id=\"面试题：-amp-和-amp-amp-的区别？\"><a href=\"#面试题：-amp-和-amp-amp-的区别？\" class=\"headerlink\" title=\"面试题：&amp;和&amp;&amp;的区别？\"></a>面试题：&amp;和&amp;&amp;的区别？</h4><p>​\t\t\t\t&amp;&amp;具有短路功能，效率更高。</p>\n<h3 id=\"d-赋值运算符\"><a href=\"#d-赋值运算符\" class=\"headerlink\" title=\"d.赋值运算符\"></a>d.赋值运算符</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x3D;\n   int a&#x3D;10;</code></pre>\n\n<h4 id=\"面试题：-x3D-x3D-和-x3D-的区别？\"><a href=\"#面试题：-x3D-x3D-和-x3D-的区别？\" class=\"headerlink\" title=\"面试题：&#x3D;&#x3D;和&#x3D;的区别？\"></a>面试题：&#x3D;&#x3D;和&#x3D;的区别？</h4><p>&#x3D;&#x3D;为比较，&#x3D;为赋值</p>\n<h3 id=\"e-三目运算符（三元运算符）\"><a href=\"#e-三目运算符（三元运算符）\" class=\"headerlink\" title=\"e.三目运算符（三元运算符）\"></a>e.三目运算符（三元运算符）</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n* 算术运算符\n* 三目运算符\n*&#x2F;\npublic class Test9 &#123;\n\tpublic static void main(String[] args) &#123;\n\t&#x2F;&#x2F;比较条件?满足true赋的值:满足false赋的值\n\t\tint r1&#x3D;8&gt;5?1:0;\n\t\tSystem.out.println(r1);\n\t\tString r2&#x3D;8&gt;5?&quot;男&quot;:&quot;女&quot;;\n\t\tSystem.out.println(r2);\n\t&#125;\n&#125;</code></pre>\n\n\n\n<h3 id=\"f-位运算符\"><a href=\"#f-位运算符\" class=\"headerlink\" title=\"f.位运算符\"></a>f.位运算符</h3><p>很少用</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">System.out.println(1&gt;&gt;2);\nSystem.out.println(1&lt;&lt;2);</code></pre>\n\n<h2 id=\"H-值比较\"><a href=\"#H-值比较\" class=\"headerlink\" title=\"H.值比较\"></a>H.值比较</h2><p>1.数值之间比较</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">boolean r1&#x3D;7&#x3D;&#x3D;8; &#x2F;&#x2F;&#x3D;&#x3D;用于数值之间比较</code></pre>\n\n<p><font color=\"red\">是用于数值之间比较，比较的是内存地址是否相等。</font>当int 1&#x3D;7;的时候，首先去内存中找是否有7这个常量，如果没有就根据int开辟一个4字节的空间内存7，地址赋给a；当int b&#x3D;7，如果内存有7就没必要重新开辟新的空间，而是将7的地址赋给b变量，因此a&#x3D;&#x3D;b是判断两个值的内存地址是否一致</p>\n<p><font color=\"red\">基本数据类型是保存在堆（堆栈）内存，数据可共享，引用类型是保存在堆内存，数据不共享</font></p>\n<p><img src=\"/post/Java%E5%8F%98%E9%87%8F/tu2.png\"></p>\n<p>2.equals</p>\n<p>字符串比较</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">String name&#x3D;&quot;&quot;;\nString name1&#x3D;&quot;&quot;;\n\nSystem.out.println(name.equals(name1));&#x2F;&#x2F;比较字符串的值是否相等\nSystem.out.println(!name.equals(name1));</code></pre>\n\n<h2 id=\"I-常量\"><a href=\"#I-常量\" class=\"headerlink\" title=\"I.常量\"></a>I.常量</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;用final修饰的变量叫常量，用于经常使用固定的值而并不会经常发送改变的值，比如一周7天\nfinal int WEEKDAY&#x3D;7;\nSystem.out.println(&quot;一周&quot;+WEEKDAY+&quot;天&quot;);</code></pre>\n\n<h2 id=\"J-上机作业\"><a href=\"#J-上机作业\" class=\"headerlink\" title=\"J.上机作业\"></a>J.上机作业</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">控制台输入语文、数学、英语三门课程的成绩，得到总分和平均分</code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class Test11 &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tScanner input&#x3D;new Scanner(System.in);\n        \n\t\tSystem.out.println(&quot;请输入语文成绩:&quot;);\n\t\tint yuwen&#x3D;input.nextInt();\n\t\tSystem.out.println(&quot;请输入数学成绩:&quot;);\n\t\tint shuxue&#x3D;input.nextInt();\n\t\tSystem.out.println(&quot;请输入英语成绩:&quot;);\n\t\tint yingyu&#x3D;input.nextInt();\n        \n\t\t&#x2F;&#x2F;统计总分\n\t\tint total&#x3D;yuwen+shuxue+yingyu;\n        System.out.println(&quot;3门课程的总分是:&quot;+total);\n\t\t&#x2F;&#x2F;平均分\n\t\tdouble avgScore&#x3D;total&#x2F;3.0;\n\t\tSystem.out.println(&quot;3门课程的平均分是:&quot;+avgScore);\n\t&#125;\n&#125;</code></pre>\n\n<p>作业：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class Test12 &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tScanner input&#x3D;new Scanner(System.in);\n\t\tSystem.out.println(&quot;请输入一个4位长度的整数:&quot;);\n\t\tint num&#x3D;input.nextInt();\n\t\t&#x2F;&#x2F;分别统计出各位、十位、百位、千位的数\n\t\t&#x2F;&#x2F; 1234\n\t&#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.Scanner;\n\npublic class Test7 &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tScanner input&#x3D;new Scanner(System.in);\n\t\tSystem.out.println(&quot;请输入一个4位长度的整数：&quot;);\n\t\tint num&#x3D; input.nextInt();\n\t\t\n\t\tint geWei &#x3D;num%10;\n\t\tint shiWei&#x3D;num&#x2F;10%10;\n\t\tint baiWei&#x3D;num&#x2F;100%10;\n\t\tint qianWei&#x3D;num&#x2F;1000;\n\t\t\n\t\tint num1&#x3D;qianWei+baiWei*10+shiWei*100+geWei*1000;\n\t\tSystem.out.println(&quot;个位&quot;+geWei+&quot;十位&quot;+shiWei+&quot;百位&quot;+baiWei+&quot;千位&quot;+qianWei);\n\t\tSystem.out.println(num1);\n\t\t\n        int total&#x3D;geWei+shiWei+baiWei+qianWei;\n\t\tString message&#x3D;total&gt;20?&quot;幸运顾客&quot;:&quot;谢谢惠顾&quot;;\n\t\tSystem.out.println(message);\n        \n\t\tinput.close();\n\t&#125;\n&#125;</code></pre>\n\n<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1>","text":"A.定义存储在内存中的值并且能够发生改变，数据需要放在内存中才可以进行计算。变量本质是计算机内存中代表一个”可操作的存储空间“，位置是确定的，但里面的值是不确定的可以改变。通过变量名来访问该对应的存储的内存空间里面的值（变量名存储的是这个数据存在内存的地址）从而操作这个内存存储的...","link":"","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":8,"path":"api/categories/JavaSE.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"变量","slug":"变量","count":2,"path":"api/tags/变量.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#A-%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">A.定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#B-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">B.数据类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#C-%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99\"><span class=\"toc-text\">C.变量命名规则</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#D-%E5%8F%98%E9%87%8F%E7%A7%8D%E7%B1%BB\"><span class=\"toc-text\">D.变量种类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1.局部变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.全局变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">3.静态变量</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#E-%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">E.数据转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#F-%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">F.控制台输入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#G-%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">G.运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#a-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">a.算术运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#b-%E6%9D%A1%E4%BB%B6%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">b.条件运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#c-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">c.逻辑运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A-amp-%E5%92%8C-amp-amp-%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">面试题：&amp;和&amp;&amp;的区别？</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#d-%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">d.赋值运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A-x3D-x3D-%E5%92%8C-x3D-%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">面试题：&#x3D;&#x3D;和&#x3D;的区别？</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#e-%E4%B8%89%E7%9B%AE%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%88%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%89\"><span class=\"toc-text\">e.三目运算符（三元运算符）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#f-%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">f.位运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#H-%E5%80%BC%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">H.值比较</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#I-%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">I.常量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#J-%E4%B8%8A%E6%9C%BA%E4%BD%9C%E4%B8%9A\"><span class=\"toc-text\">J.上机作业</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a>","author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}},"mapped":true,"prev_post":{"title":"Bigdecimal精密计算","uid":"ff8b4e7bd08af9ca18a9a619d3b021b3","slug":"Bigdecimal精密计算","date":"2022-07-02T12:13:23.000Z","updated":"2022-07-02T12:14:25.793Z","comments":true,"path":"api/articles/Bigdecimal精密计算.json","keywords":null,"cover":null,"text":"Bigdecimal精密计算&#x2F;&#x2F;由于double和float不是一个精确的数，不合适去做金融类的计算 &#x2F;&#x2F;在java.math包下提供了一个BigInteger和Bigdecimal去做计算 double a&#x3D;1.0-0.1-0....","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":8,"path":"api/categories/JavaSE.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"变量","slug":"变量","count":2,"path":"api/tags/变量.json"},{"name":"Bigdecimal","slug":"Bigdecimal","count":1,"path":"api/tags/Bigdecimal.json"}],"author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}}},"next_post":{"title":"Jetbrains Intellij IDEA 安装","uid":"20520177646e4b84eee9d8a683bf9389","slug":"Jetbrains-Intellij-IDEA-安装","date":"2022-07-02T02:36:07.000Z","updated":"2022-07-02T06:14:35.774Z","comments":true,"path":"api/articles/Jetbrains-Intellij-IDEA-安装.json","keywords":null,"cover":[],"text":"IDEA安装 IDEA 全称 IntelliJ IDEA，是Java编程语言开发的集成环境(IDE)。IntelliJ在业界被公认为最好的Java开发工具，尤其在智能代码助手、代码自动提示、重构、J2EE支持、各类版本工具(git、svn等)、JUnit、CVS整合、代码分析、 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Java","slug":"Java","count":1,"path":"api/categories/Java.json"}],"tags":[{"name":"开发工具","slug":"开发工具","count":1,"path":"api/tags/开发工具.json"},{"name":"环境","slug":"环境","count":1,"path":"api/tags/环境.json"}],"author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}}}}