{"title":"03_基本的SELECT语句","uid":"1ac8f6012661867860f0bbd932099ba2","slug":"MySQL8/基础篇/03_基本的SELECT语句","date":"2022-07-23T08:56:02.000Z","updated":"2022-07-25T14:05:34.758Z","comments":true,"path":"api/articles/MySQL8/基础篇/03_基本的SELECT语句.json","keywords":"Java study learn 学习","cover":[],"content":"<h1 id=\"第03章-基本的SELECT语句\"><a href=\"#第03章-基本的SELECT语句\" class=\"headerlink\" title=\"第03章_基本的SELECT语句\"></a>第03章_基本的SELECT语句</h1><span id=\"more\"></span>\n\n<h2 id=\"1-SQL概述\"><a href=\"#1-SQL概述\" class=\"headerlink\" title=\"1.SQL概述\"></a>1.SQL概述</h2><h3 id=\"1-1-SQL背景知识\"><a href=\"#1-1-SQL背景知识\" class=\"headerlink\" title=\"1.1 SQL背景知识\"></a>1.1 SQL背景知识</h3><ul>\n<li><p>1946年，世界上第一台电脑诞生，如今，借由这台电脑发展起来的互联网已经自成江湖。在这几十年里，无数的技术、产业在这片江湖里沉浮，有的方兴未艾，有的已经几幕兴衰。但在这片浩荡的波动里，有一门技术从未消失，甚至“老当益壮”，那就是SQL.</p>\n<ul>\n<li>45年前，也就是1974年，IBM研究员发布了一篇揭开数据库技术的论文《SEQUEL:一门结构化的英语查询语言》，直到今天这门结构化的查询语言并没有太大的变化，相比于其他语言，<font color=orange>SQL的半衰期可以说是非常长</font>了。</li>\n</ul>\n</li>\n<li><p>不论是前端工程师，还是后端算法工程师，都一定会和数据打交道，都需要了解如何又快又准确地提取自己想要的数据。更别提数据分析师了，他们的工作就是和数据打交道，整理不同的报告，以便指导业务决策。</p>\n</li>\n<li><p>SQL(Structured Query Language,结构化查询语言)是使用关系模型的数据库应用语言，<font color=orange>与数据直接打交道</font>，由IBN上世纪70年代开发出来。后由美国国家标准局(ANSI)开始着手制定SQL标准，先后有<font color=orange>SQL-86,SQL-89,SQL-92,SQL-99</font>等标准。</p>\n<ul>\n<li>SQL有两个重要的标准，分别是SQL92和SQL99，它们分别代表了92年和99年颁布的SQL标准，我们如今使用的SQL语言依然遵循这些标准。</li>\n</ul>\n</li>\n<li><p>不同的数据库生产厂商都支持SQL语句，但都有特有内容。</p>\n</li>\n</ul>\n<p><img src=\"/post/2022/07/null/tu1.png\"></p>\n<h3 id=\"1-2-SQL语言排行\"><a href=\"#1-2-SQL语言排行\" class=\"headerlink\" title=\"1.2 SQL语言排行\"></a>1.2 SQL语言排行</h3><p>自从SQL加入了TIOBE编程语言排行榜，就一直保持在Top10</p>\n<p><a href=\"https://www.tiobe.com/tiobe-index/\">TIOBE Index - TIOBE</a></p>\n<p><img src=\"/post/2022/07/null/tu2.png\"></p>\n<h3 id=\"1-3-SQL分类\"><a href=\"#1-3-SQL分类\" class=\"headerlink\" title=\"1.3 SQL分类\"></a>1.3 SQL分类</h3><p>SQL语言在功能上主要分为如下3大类</p>\n<ul>\n<li><p>**DDL(Data Definition Languages、数据定义语言)**，这些语句定义了不同的数据库、表、视图、索引等数据库对象，还可以用来创建、删除、修改数据库和数据表的结构。</p>\n<ul>\n<li><p>主要的语句关键字包括<font color=orange>CREATE、DROP、ALTER</font>等</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CREATE \\ ALTER \\ DROP \\ RENAME \\ TRUNCATE</p></blockquote>\n</li>\n</ul>\n</li>\n<li><p>**DML(Data Manipulation Languages、数据操作语言)**，用于添加、删除、更新和查询数据库记录，并检查数据完整性。</p>\n<ul>\n<li>主要的语句关键字包括<font color=orange>INSERT、DELETE、UPDATE、SELECT</font>等。</li>\n<li><strong>SELECT是SQL语言的基础，最为重要</strong></li>\n</ul>\n</li>\n<li><p>**DCL(Data Control Languages、数据控制语言)**，用于定义数据库、表、字段、用户的访问权限和安全级别。</p>\n<ul>\n<li>主要的语句关键字包括<font color=orange>GRANT、REVIKE、COMMIT、ROLLBACK、SAVEPOINT</font>等。</li>\n</ul>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>因为查询语句使用的非常频繁，所以很多人把查询语句单独列为一类：DQL（数据查询语句）。</p>\n<p>还有单独将<font color=orange>COMMIT、ROLLBACK</font>取出来称为TCL（Transation Control Languages，事务控制语言）</p></blockquote>\n<h2 id=\"2-SQL语言的规则和规范\"><a href=\"#2-SQL语言的规则和规范\" class=\"headerlink\" title=\"2.SQL语言的规则和规范\"></a>2.SQL语言的规则和规范</h2><h3 id=\"2-1-基本规则\"><a href=\"#2-1-基本规则\" class=\"headerlink\" title=\"2.1 基本规则\"></a>2.1 基本规则</h3><ul>\n<li>SQL可以写在一行或者多行。为了提高可读性，各子句分行写，必要时使用缩进</li>\n<li>每条命令以；或者\\g或\\G结束</li>\n<li>关键字不能被缩写也不能分行</li>\n<li>关于标点符号<ul>\n<li>必须保证所有的()、单引号、双引号是成对结束的</li>\n<li>必须使用英文状态下的半角输入方式</li>\n<li>字符串型和日期时间类型的数据可以使用单引号（’’）表示</li>\n<li>列的别名，尽量使用双引号(“”)，而且不建议省略as</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-2-SQL大小写规范\"><a href=\"#2-2-SQL大小写规范\" class=\"headerlink\" title=\"2.2 SQL大小写规范\"></a>2.2 SQL大小写规范</h3><ul>\n<li><strong>MySQL在Windows环境下是大小写不敏感的</strong></li>\n<li><strong>MySQL在Linux环境下是大小写敏感的</strong><ul>\n<li>数据库名、表名、表的别名、变量名是严格区分大小写的</li>\n<li>关键字、函数名、列名（或字段名）、列的别名（字段的别名）是忽略大小写的</li>\n</ul>\n</li>\n<li><strong>推荐采用统一的书写规范</strong><ul>\n<li>数据库名、表名、表的别名、字段名、字段的别名等都小写</li>\n<li>SQL关键字、函数名、绑定变量等都大写</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-3注释\"><a href=\"#2-3注释\" class=\"headerlink\" title=\"2.3注释\"></a>2.3注释</h3><p>格式如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">单行注释： #注释文字（MySQL特有的方式）\n单行注释： -- 注释文字（--后面必须包含一个空格）\n多行注释： &#x2F;* 注释文字 *&#x2F;</code></pre>\n\n<h3 id=\"2-4-命名规则\"><a href=\"#2-4-命名规则\" class=\"headerlink\" title=\"2.4 命名规则\"></a>2.4 命名规则</h3><ul>\n<li>数据库、表名不得超过30个字符，变量名限制为29个</li>\n<li>必须只能包含A-Z,a-z，0-9，_共63个字符</li>\n<li>数据库名、表名、字段名等对象名中间不要包含空格</li>\n<li>同一个MySQ软件中，数据库不能同名：同一个库中，表不能重名；同一个表中，字段不能重名</li>\n<li>必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使用&#96;（着重号）引起来</li>\n<li>保持字段名和类型的一致性，在命名字段并为其指定数据类型的时候一定要保证一致性。假如数据类型在一个表里是整数，那在另一个表里可就别变成字符型了</li>\n</ul>\n<p>举例：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">#以下两句是一样的，不区分大小写\nshow databases\nSHOW DATABASES\n\n#创建表格\n#create table student info(...);#表名错误，因为表名有空格\ncreate table student_info(...);\n\n#其中order使用&#96;&#96;符号，因为order和系统关键字或系统函数名等预定义标识符重名了\nCREATE TABLE &#96;order&#96;(\n\tid INT,\n    Iname VARCHAR(20)\n);\n\n\n# as:全称： alias\nselect id as &quot;编号&quot;,&#96;name&#96; as &quot;姓名&quot; from t_stu; #起别名时，as都可以省略\nselect id as 编号,&#96;name&#96; as 姓名 from t_stu; #如果字段别名中没有空格，那么可以省略&quot;&quot;\nselect id as 编 号,&#96;name&#96; as 姓 名 from t_stu; #错误，如果字段别名中有空格，那么不能省略&quot;&quot;</code></pre>\n\n<h3 id=\"2-5-数据导入指令\"><a href=\"#2-5-数据导入指令\" class=\"headerlink\" title=\"2.5 数据导入指令\"></a>2.5 数据导入指令</h3><p>方式1：在命令行客户端登录mysql，使用source指令导入</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysql&gt; source d:\\xxx.sql</code></pre>\n\n<p>通过FOREIGN_KEY_CHECKS解决，用法如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">set FOREIGN_KEY_CHECKS&#x3D;0;  #在导入前设置为不检查外键约束\nset FOREIGN_KEY_CHECKS&#x3D;1;  #在导入后恢复检查外键约束</code></pre>\n\n<h2 id=\"3-基本的SELECT语句\"><a href=\"#3-基本的SELECT语句\" class=\"headerlink\" title=\"3.基本的SELECT语句\"></a>3.基本的SELECT语句</h2><h3 id=\"3-1-SELECT\"><a href=\"#3-1-SELECT\" class=\"headerlink\" title=\"3.1 SELECT\"></a>3.1 SELECT</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT 1; #没有任何子句\nSELECT 9&#x2F;2; #没有任何子句</code></pre>\n\n<h3 id=\"3-2-SELECT…FROM\"><a href=\"#3-2-SELECT…FROM\" class=\"headerlink\" title=\"3.2 SELECT…FROM\"></a>3.2 SELECT…FROM</h3><ul>\n<li>语法：</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT 标识选择哪些列\nFROM 标识从哪个表中选择</code></pre>\n\n<ul>\n<li>选择全部列：</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT *\nFROM departments;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu3.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一般情况下，除非需要使用表中所有的字段数据，最好不要使用通配符‘*’。使用通配符虽然可以节省输入查询语句的时间，但是获取不需要的列数据通常会降低查询和所使用的应用程序的效率。通配符的优势是，当不知道所需要的列的名称时，可以通过它获取它们。</p>\n<p>在生产环境下，不推荐你直接使用SELECT  * 进行查询。</p></blockquote>\n<ul>\n<li>选择特定的列</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT department_id, location_id\nFROM departments;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu4.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MySQL中的SQL语句是不区分大小写的，因此SELECT和select的作用是相同的，但是，许多开发人员习惯将关键字大写、数据列和表名小写，读者也应该养成一个良好的编程习惯，这样写出来的代码更容易阅读和维护。</p></blockquote>\n<h3 id=\"3-3-列的别名\"><a href=\"#3-3-列的别名\" class=\"headerlink\" title=\"3.3 列的别名\"></a>3.3 列的别名</h3><ul>\n<li>重命名一个列</li>\n<li>便于计算</li>\n<li>紧跟列名，也可以在列名和别名之间加入关键字AS，别名使用双引号，以便在别名中包含空格或特 殊的字符并区分大小写。</li>\n<li>AS 可以省略</li>\n<li>建议别名简短，见名知意</li>\n<li>举例：</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT last_name AS name, commission_pct comm\nFROM employees;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu5.png\"></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT last_name &quot;Name&quot;, salary* 12 &quot;Annual Salary&quot;\nFROM employees;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu6.png\"></p>\n<h3 id=\"3-4-去除重复行\"><a href=\"#3-4-去除重复行\" class=\"headerlink\" title=\"3.4 去除重复行\"></a>3.4 去除重复行</h3><p>默认情况下，查询会返回全部行，包括重复行。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT department_id\nFROM employees;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu7.png\"></p>\n<p><strong>在SELECT语句中使用关键字DISTINCT去除重复行</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT DISTINCT department_id\nFROM employees;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu8.png\"></p>\n<p>而对于</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT DISTINCT department_id,salary\nFROM employees;</code></pre>\n\n<ol>\n<li>DISTINCT 需要放到所有列名的前面，如果写成<code>SELECT salary, DISTINCT department_id FROM employees</code>会报错。</li>\n<li>DISTINCT 其实是对后面所有列名的组合进行去重，你能看到最后的结果是 74 条，因为这 74 个部门id不同，都有 salary 这个属性值。如果你想要看都有哪些不同的部门（department_id），只需要写<code>DISTINCT department_id</code>即可，后面不需要再加其他的列名了。</li>\n</ol>\n<h3 id=\"3-5-空值参与运算\"><a href=\"#3-5-空值参与运算\" class=\"headerlink\" title=\"3.5 空值参与运算\"></a>3.5 空值参与运算</h3><p>空值：null</p>\n<p>null不等同于0，’’，’null’</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT * FROM employees;</code></pre>\n\n<p>空值参与运算：结果也一定为空</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT employee_id,salary,commission_pct,\n12 * salary * ( 1 + commission_pct) &quot;annual_sal&quot;\nFROM employees;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu9.png\"></p>\n<p>实际问题的解决方案：引入IFNULL</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT employee_id, salary &quot;月工资&quot;, \nsalary * (1 + IFNULL(commission_pct, 0)) * 12 &quot;年工资&quot;\nFROM employees;</code></pre>\n\n<p><font color=red>注意：在 MySQL 里面， 空值不等于空字符串。一个空字符串的长度是 0 ，而一个空值的长度是空。而且，在 MySQL 里面，空值是占用空间的。</font></p>\n<p><img src=\"/post/2022/07/null/tu10.png\"></p>\n<h3 id=\"3-6-着重号-96-96\"><a href=\"#3-6-着重号-96-96\" class=\"headerlink\" title=\"3.6 着重号 &#96;&#96;\"></a>3.6 着重号 &#96;&#96;</h3><p>需要保证表中的字段、表名等没有和保留字、数据库系统或常用方法冲突。如果真的相同，请在SQL语句中使用一对&#96;&#96;（着重号）引起来。</p>\n<p>错误：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT * FROM ORDER;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu11.png\"></p>\n<p>正确：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT * FROM &#96;ORDER&#96;;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu12.png\"></p>\n<h3 id=\"3-7-查询常数\"><a href=\"#3-7-查询常数\" class=\"headerlink\" title=\"3.7 查询常数\"></a>3.7 查询常数</h3><p>SELECT 查询还可以对常数进行查询。对的，就是在 SELECT 查询结果中增加一列固定的常数列。这列的取值是我们指定的，而不是从数据表中动态取出的。</p>\n<p>你可能会问为什么我们还要对常数进行查询呢？</p>\n<p>SQL 中的 SELECT 语法的确提供了这个功能，一般来说我们只从一个表中查询数据，通常不需要增加一个固定的常数列，但如果我们想整合不同的数据源，用常数列作为这个表的标记，就需要查询常数。</p>\n<p>比如说，我们想对 employees 数据表中的员工姓名进行查询，同时增加一列字段corporation，这个字段固定值为“尚硅谷”，可以这样写：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT &#39;尚硅谷&#39; as corporation, last_name FROM employees;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu13.png\"></p>\n<h2 id=\"4-显示表结构\"><a href=\"#4-显示表结构\" class=\"headerlink\" title=\"4.显示表结构\"></a>4.显示表结构</h2><p>使用DESCRIBE 或 DESC 命令，表示表结构。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">DESCRIBE employees;\n或\nDESC employees;</code></pre>\n\n<p><img src=\"/post/2022/07/null/TU14.png\"></p>\n<p>其中，各个字段的含义分别解释如下：</p>\n<ul>\n<li>Field：表示字段名称。</li>\n<li>Type：表示字段类型，这里 barcode、goodsname 是文本型的，price 是整数类型的。</li>\n<li>Null：表示该列是否可以存储NULL值。</li>\n<li>Key：表示该列是否已编制索引。PRI表示该列是表主键的一部分；UNI表示该列是UNIQUE索引的一部分；MUL表示在列中某个给定值允许出现多次。</li>\n<li>Default：表示该列是否有默认值，如果有，那么值是多少。</li>\n<li>Extra：表示可以获取的与给定列有关的附加信息，例如AUTO_INCREMENT等。</li>\n</ul>\n<h2 id=\"5-过滤数据\"><a href=\"#5-过滤数据\" class=\"headerlink\" title=\"5.过滤数据\"></a>5.过滤数据</h2><ul>\n<li><p>语法：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT 字段1,字段 2\nFROM 表名\nWHERE 过滤条件</code></pre>\n\n<ul>\n<li>使用WHERE 子句，将不满足条件的行过滤掉</li>\n<li><strong>WHERE子句紧随 FROM子句</strong></li>\n</ul>\n</li>\n<li><p>举例</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT employee_id, last_name, job_id, department_id\nFROM employees\nWHERE department_id &#x3D; 90;</code></pre>\n\n<p><img src=\"/post/2022/07/null/tu15.png\"></p>\n","feature":true,"text":"第03章_基本的SELECT语句 1.SQL概述1.1 SQL背景知识 1946年，世界上第一台电脑诞生，如今，借由这台电脑发展起来的互联网已经自成江湖。在这几十年里，无数的技术、产业在这片江湖里沉浮，有的方兴未艾，有的已经几幕兴衰。但在这片浩荡的波动里，有一门技术从未消失，甚至...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"MySQL8","slug":"MySQL8","count":3,"path":"api/categories/MySQL8.json"}],"tags":[{"name":"database","slug":"database","count":3,"path":"api/tags/database.json"},{"name":"MySQL8","slug":"MySQL8","count":3,"path":"api/tags/MySQL8.json"},{"name":"基础篇","slug":"基础篇","count":3,"path":"api/tags/基础篇.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC03%E7%AB%A0-%E5%9F%BA%E6%9C%AC%E7%9A%84SELECT%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">第03章_基本的SELECT语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-SQL%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">1.SQL概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-SQL%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">1.1 SQL背景知识</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-SQL%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C\"><span class=\"toc-text\">1.2 SQL语言排行</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-SQL%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">1.3 SQL分类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-SQL%E8%AF%AD%E8%A8%80%E7%9A%84%E8%A7%84%E5%88%99%E5%92%8C%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">2.SQL语言的规则和规范</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%9F%BA%E6%9C%AC%E8%A7%84%E5%88%99\"><span class=\"toc-text\">2.1 基本规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-SQL%E5%A4%A7%E5%B0%8F%E5%86%99%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">2.2 SQL大小写规范</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">2.3注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99\"><span class=\"toc-text\">2.4 命名规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">2.5 数据导入指令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%9F%BA%E6%9C%AC%E7%9A%84SELECT%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">3.基本的SELECT语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-SELECT\"><span class=\"toc-text\">3.1 SELECT</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-SELECT%E2%80%A6FROM\"><span class=\"toc-text\">3.2 SELECT…FROM</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E5%88%97%E7%9A%84%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">3.3 列的别名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E8%A1%8C\"><span class=\"toc-text\">3.4 去除重复行</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5-%E7%A9%BA%E5%80%BC%E5%8F%82%E4%B8%8E%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">3.5 空值参与运算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-6-%E7%9D%80%E9%87%8D%E5%8F%B7-96-96\"><span class=\"toc-text\">3.6 着重号 &#96;&#96;</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-7-%E6%9F%A5%E8%AF%A2%E5%B8%B8%E6%95%B0\"><span class=\"toc-text\">3.7 查询常数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E6%98%BE%E7%A4%BA%E8%A1%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">4.显示表结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">5.过滤数据</span></a></li></ol></li></ol>","author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}},"mapped":true,"prev_post":{"title":"04_运算符","uid":"338f86b6c9b947a05db95cbf848fef3e","slug":"MySQL8/基础篇/04_运算符","date":"2022-07-25T14:07:16.000Z","updated":"2022-07-25T14:07:16.462Z","comments":true,"path":"api/articles/MySQL8/基础篇/04_运算符.json","keywords":"Java study learn 学习","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}},"feature":true},"next_post":{"title":"02_MySQL的环境搭建","uid":"fd77306b8e52681f5ddc632e21ce0385","slug":"MySQL8/基础篇/02_MySQL的环境搭建","date":"2022-07-23T08:55:11.000Z","updated":"2022-07-24T01:09:33.129Z","comments":true,"path":"api/articles/MySQL8/基础篇/02_MySQL的环境搭建.json","keywords":"Java study learn 学习","cover":null,"text":"第02章_MySQL的环境搭建 1.MySQL的卸载步骤1：停止MySQL服务在卸载之前，先停止MySQL8.0的服务，按键盘上的“Ctrl+Alt+” 步骤2：软件的卸载步骤3：残余文件的清理步骤4：清楚注册表（选做）步骤5：删除环境变量配置待续…… ","link":"","photos":[],"count_time":{"symbolsCount":128,"symbolsTime":"1 mins."},"categories":[{"name":"MySQL8","slug":"MySQL8","count":3,"path":"api/categories/MySQL8.json"}],"tags":[{"name":"database","slug":"database","count":3,"path":"api/tags/database.json"},{"name":"MySQL8","slug":"MySQL8","count":3,"path":"api/tags/MySQL8.json"},{"name":"基础篇","slug":"基础篇","count":3,"path":"api/tags/基础篇.json"},{"name":"环境搭建","slug":"环境搭建","count":1,"path":"api/tags/环境搭建.json"}],"author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}},"feature":true}}