{"title":"day01-登录、登出、修改密码","uid":"2595e55bf451ea24b0a50ca7cbf81584","slug":"day01-登录、登出、修改密码","date":"2022-07-05T11:17:26.000Z","updated":"2022-07-06T12:14:37.195Z","comments":true,"path":"api/articles/day01-登录、登出、修改密码.json","keywords":"Java study learn 学习","cover":null,"content":"<p>开发日记day01</p>\n<p>环境：JDK15、SpringBoot、Vue、Redis、MySQL、RabbitMQ、MongoDB</p>\n<span id=\"more\"></span>\n\n<p>数据库数据加密用到了\tHEX(AES_ENCRYPT())</p>\n<p>HEX():将一个字符串转换为十六进制格式的字符串</p>\n<p>UNHEX():将十六进制格式的字符串转化为原来的格式</p>\n<p>加密   AES_ENCRYPT(‘content’,‘secret’)</p>\n<p>解密  AES_DECRYPT(‘content’,‘secret’)</p>\n<h1 id=\"登录：\"><a href=\"#登录：\" class=\"headerlink\" title=\"登录：\"></a>登录：</h1><pre class=\"line-numbers language-sequence\" data-language=\"sequence\"><code class=\"language-sequence\">Title:登录流程\nTitle:条件查询\n前端程序-&gt;UserController:1.login\nUserController-&gt;UserServiceImpl:2.login\nUserServiceImpl-&gt;TbUserDao:3.login\nTbUserDao--&gt;UserServiceImpl:4.Integer主键值\nUserServiceImpl--&gt;UserController:5.Integer主键值\nUserController-&gt;UserServiceImpl:6.searchUserPermissions\nUserServiceImpl-&gt;TbUserDao:7.searchUserPermissions\nTbUserDao--&gt;UserServiceImpl:8.Set集合\nUserServiceImpl--&gt;UserController:9.Set集合\nUserController--&gt;前端程序:10.权限集合和布尔值</code></pre>\n\n\n\n<h2 id=\"前端：\"><a href=\"#前端：\" class=\"headerlink\" title=\"前端：\"></a>前端：</h2><h3 id=\"login-vue\"><a href=\"#login-vue\" class=\"headerlink\" title=\"login.vue:\"></a>login.vue:</h3><h4 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template:\"></a>template:</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">v-model&#x3D;&quot;username&quot;\t\t绑定用户名\nv-model&#x3D;&quot;password&quot;\t\t绑定密码\n@click&#x3D;&quot;login&quot;\t\t\t绑定登录函数</code></pre>\n\n<h4 id=\"script：\"><a href=\"#script：\" class=\"headerlink\" title=\"script：\"></a>script：</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">import &#123;isUsername,\n\t\tisPassword\n\t&#125; from &#39;..&#x2F;utils&#x2F;validate.js&#39;   前端对数据进行验证\n\nlogin: function()&#123;\n\tlet that &#x3D; this;\n\t&#x2F;&#x2F;对用户名验证\n\tif(!isUsername(that.username))&#123;\n\t\tthat.$message(&#123;\n\t\t\tmessage: &#39;用户格式不对&#39;,\n\t\t\ttype: &#39;error&#39;,\n\t\t\tduration: 1200\n\t\t&#125;)\n\t&#125;else if (!isPassword(that.password)) &#123;\n\t&#x2F;&#x2F;对密码进行验证\n\t\tthat.$message(&#123;\n\t\t\tmessage: &#39;密码格式不对&#39;,\n\t\t\ttype: &#39;error&#39;,\n\t\t\tduration: 1200\n\t\t&#125;);\n\t&#125;else &#123;\n\t\t&#x2F;&#x2F;如果验证均通过，则将数据封装到data\n\t\tlet data &#x3D; &#123;\n\t\t\tusername: that.username,\n\t\t\tpassword: that.password\n\t\t&#125;;\n\t\t&#x2F;&#x2F;将数据传递给后端\n\t\tthat.$http(&#39;user&#x2F;login&#39;, &#39;POST&#39;, data, true, function(resp) &#123;\n\t\t\t&#x2F;&#x2F;解析后端传回的的数据\n\t\t\t&#x2F;&#x2F;获取到的数据中，result为真\n\t\t\tif (resp.result) &#123;\n\t\t\t\tlet permissions &#x3D; resp.permissions;\n\t\t\t\tlet token &#x3D; resp.token;\n\t\t\t\tlocalStorage.setItem(&#39;permissions&#39;, permissions);\n\t\t\t\tlocalStorage.setItem(&#39;token&#39;, token);\n\t\t\t\t&#x2F;&#x2F;通过路由转发到Home页面\n\t\t\t\trouter.push(&#123;name: &#39;Home&#39;&#125;);\n\t\t\t&#125; else &#123;\n\t\t\t\t&#x2F;&#x2F;获取到的数据中，result为假，即不存在用户\n\t\t\t\tthat.$message(&#123;\n\t\t\t\t\tmessage: &#39;登陆失败&#39;,\n\t\t\t\t\ttype: &#39;error&#39;,\n\t\t\t\t\tduration: 1200\n\t\t\t\t&#125;)\n\t\t\t&#125;\n\t\t&#125;)\n\t&#125;\n&#125;</code></pre>\n\n<h2 id=\"后端：\"><a href=\"#后端：\" class=\"headerlink\" title=\"后端：\"></a>后端：</h2><h3 id=\"DAO\"><a href=\"#DAO\" class=\"headerlink\" title=\"DAO:\"></a>DAO:</h3><p>TbUserDao: <code>public Integer login(HashMap map);</code></p>\n<p>Mapper:从tb_user表查询id </p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">&lt;select id&#x3D;&quot;login&quot; parameterType&#x3D;&quot;HashMap&quot; resultType&#x3D;&quot;Integer&quot;&gt;\n       SELECT id\n       FROM tb_user\n       WHERE username&#x3D;#&#123;username&#125;\n       AND password&#x3D;HEX(AES_ENCRYPT(#&#123;password&#125;,#&#123;username&#125;))\n       LIMIT 1\n   &lt;&#x2F;select&gt;</code></pre>\n\n<h3 id=\"Service\"><a href=\"#Service\" class=\"headerlink\" title=\"Service:\"></a>Service:</h3><p>UserService: <code>public Integer login(HashMap map);</code></p>\n<p>UserServiceImpl:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Override\npublic Integer login(HashMap map)&#123;\n    Integer userId&#x3D;userDao.login(map);\n    return userId;\n&#125;</code></pre>\n\n<h3 id=\"Controller\"><a href=\"#Controller\" class=\"headerlink\" title=\"Controller:\"></a>Controller:</h3><p>LoginForm:存储前端传入的登录账号密码</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Data\n@Schema(description &#x3D; &quot;登陆系统&quot;)\npublic class LoginForm&#123;\n    \n    @NotBlank(message &#x3D; &quot;用户名不能为空&quot;)\n    @Pattren(regxp &#x3D; &quot;^[a-zA-Z0-9]&#123;5,20&#125;$&quot;,message&#x3D;&quot;用户名格式错误&quot;)\n    @Schema(description &#x3D; &quot;用户名&quot;)\n    private String username;\n    \n    @NotBlank(message &#x3D; &quot;密码不能为空&quot;)\n    @Pattren(regxp &#x3D; &quot;^[a-zA-Z0-9]&#123;6,20&#125;$&quot;,message&#x3D;&quot;密码格式错误&quot;)\n    @Schema(description &#x3D; &quot;密码&quot;)\n    private String password;\n    \n&#125;</code></pre>\n\n<p>UserController:</p>\n<p>解析数据转换为HashMap，在数据库中查询数据，</p>\n<p>若存在，则在r中存入result&#x3D;true的信息，再使用StpUtil.login(userId)方法登录会话，</p>\n<p>再根据userId在数据库中查询对应的权限字符串集合，再调用StpUtil.getTokenInfo().getTokenValue()获取Token，最后将这些数据封装进R对象中，将R对象传递给前端</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@RestController\n@RequestMapping(&quot;&#x2F;user&quot;)\n@Tag(name &#x3D; &quot;UserController&quot;, description &#x3D; &quot;用户Web接口&quot;)\npublic class UserController&#123;\n    @Autowired\n    private UserService userService;\n    \n    @PostMapping(&quot;&#x2F;login&quot;)\n    @Operation(summary &#x3D; &quot;登陆系统&quot;)\n    public R login(@Valid @RequestBody LoginForm form)&#123;\n        HashMap map&#x3D;JSONUtil.parse(from).toBean(HashMap.class);\n        Integer userId &#x3D; userService.login(map);\n        R r &#x3D;R.ok().put(&quot;result&quot;,userId!&#x3D;null);\n        if(userId!&#x3D;null)&#123;\n            StpUtil.login(userId);\n            Set&lt;String&gt; permissions &#x3D; userService.searchUserPermissions(userId);\n            String token &#x3D; StpUtil.getTokenInfo().getTokenValue();\n            r.put(&quot;permissions&quot;,permissions).put(&quot;token&quot;,token);\n        &#125;\n        return r;\n    &#125;\n&#125;</code></pre>\n\n<h1 id=\"登出：\"><a href=\"#登出：\" class=\"headerlink\" title=\"登出：\"></a>登出：</h1><h2 id=\"前端：-1\"><a href=\"#前端：-1\" class=\"headerlink\" title=\"前端：\"></a>前端：</h2><h3 id=\"main-vue\"><a href=\"#main-vue\" class=\"headerlink\" title=\"main.vue:\"></a>main.vue:</h3><h4 id=\"template：\"><a href=\"#template：\" class=\"headerlink\" title=\"template：\"></a>template：</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">@click&#x3D;&quot;logout&quot; 绑定</code></pre>\n\n<h4 id=\"script：-1\"><a href=\"#script：-1\" class=\"headerlink\" title=\"script：\"></a>script：</h4><p>移除localStorage本地存储，路由转发到login页面</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">logout:function()&#123;\n\tlet that&#x3D;this;\n\tthat.$http(&#39;user&#x2F;logout&#39;,&#39;GET&#39;,null,true,function(resp)&#123;\n\t\tlocalStorage.removeItem(&#39;permissions&#39;);\n\t\tthat.$router.push(&#123;name: &#39;Login&#39;&#125;);\n\t&#125;)\n&#125;</code></pre>\n\n<h2 id=\"后端：-1\"><a href=\"#后端：-1\" class=\"headerlink\" title=\"后端：\"></a>后端：</h2><p>不涉及DAO层和Service层</p>\n<h3 id=\"Controller：\"><a href=\"#Controller：\" class=\"headerlink\" title=\"Controller：\"></a>Controller：</h3><p>当前会话注销登录，返回默认R对象</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@GetMapping(&quot;&#x2F;logout&quot;)\n   @Operation(summary &#x3D; &quot;退出系统&quot;)\n   public R logout()&#123;\n       StpUtil.logout();\n       return R.ok();\n   &#125;</code></pre>\n\n<h1 id=\"修改密码：\"><a href=\"#修改密码：\" class=\"headerlink\" title=\"修改密码：\"></a>修改密码：</h1><h2 id=\"前端：-2\"><a href=\"#前端：-2\" class=\"headerlink\" title=\"前端：\"></a>前端：</h2><h3 id=\"main-vue-1\"><a href=\"#main-vue-1\" class=\"headerlink\" title=\"main.vue:\"></a>main.vue:</h3><h4 id=\"template-1\"><a href=\"#template-1\" class=\"headerlink\" title=\"template:\"></a>template:</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">@click&#x3D;&quot;updatePasswordHandle()&quot;   绑定函数updatePasswordHandle\n&lt;update-password v-if&#x3D;&quot;updatePasswordVisible&quot; ref&#x3D;&quot;updatePassword&quot;&gt;&lt;&#x2F;update-password&gt;\t\t自定义弹窗组件</code></pre>\n\n<h4 id=\"script：-2\"><a href=\"#script：-2\" class=\"headerlink\" title=\"script：\"></a>script：</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">import UpdatePassword from &#39;.&#x2F;update-password.vue&#39;;\ncomponents: &#123; UpdatePassword &#125;\n&#x2F;&#x2F;单击事件调用updatePasswordHandle函数将updatePasswordVisible修改为true\n&#x2F;&#x2F;并将表格初始化\nupdatePasswordHandle: function()&#123;\n\tthis.updatePasswordVisible&#x3D;true;\n\tthis.$nextTick(()&#x3D;&gt;&#123;\n\t\tthis.$refs.updatePassword.init();\n\t&#125;)\n&#125;</code></pre>\n\n<h3 id=\"update-password-vue：\"><a href=\"#update-password-vue：\" class=\"headerlink\" title=\"update-password.vue：\"></a>update-password.vue：</h3><h4 id=\"template-2\"><a href=\"#template-2\" class=\"headerlink\" title=\"template:\"></a>template:</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">v-model&#x3D;&quot;dataForm.password&quot;\t\t\t\t绑定输入的原密码数据\nv-model&#x3D;&quot;dataForm.newPassword&quot;\t\t\t绑定输入的新密码数据\nv-model&#x3D;&quot;dataForm.confirmPassword&quot;\t\t绑定再次输入的新密码数据\n@click&#x3D;&quot;visible &#x3D; false&quot;\t\t\t\t单击事件关闭弹窗\n@click&#x3D;&quot;dataFormSubmit&quot;\t\t\t\t\t单击事件提交数据</code></pre>\n\n<h4 id=\"script：-3\"><a href=\"#script：-3\" class=\"headerlink\" title=\"script：\"></a>script：</h4><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&#x2F;&#x2F;弹出弹窗时，对弹窗中发整个表单进行重置，将所有字段值重置为初始值并移除校验结果\ninit() &#123;\n\tthis.visible &#x3D; true;\n\tthis.$nextTick(() &#x3D;&gt; &#123;\n\t\tthis.$refs[&#39;dataForm&#39;].resetFiields();\n\t&#125;)\n&#125;，\n&#x2F;&#x2F;提交数据集合\ndataFormSubmit: function() &#123;\n\tlet that &#x3D; this;\n\t&#x2F;&#x2F;对表单进行数据验证\n\tthis.$refs[&#39;dataForm&#39;].validate(valid &#x3D;&gt; &#123;\n\t\tif (valid) &#123;\n\t\t\tlet data &#x3D; &#123;\n\t\t\t\tpassword: that.dataForm.password,\n\t\t\t\tnewPassword: that.dataForm.newPassword\n\t\t\t&#125;;\n\t\t\t&#x2F;&#x2F;数据传递给后端更新数据\n\t\t\tthat.$http(&#39;user&#x2F;updatePassword&#39;, &#39;POST&#39;, data, true, resp &#x3D;&gt; &#123;\n\t\t\t&#x2F;&#x2F;后端传入前端的数据\n\t\t\t\tif (resp.rows &#x3D;&#x3D; 1) &#123;\n\t\t\t\t\tthis.$message(&#123;\n\t\t\t\t\t\tmessage: &#39;密码修改成功&#39;,\n\t\t\t\t\t\ttype: &#39;success&#39;,\n\t\t\t\t\t\tduration: 1200\n\t\t\t\t\t&#125;)\n\t\t\t\t\t&#x2F;&#x2F;修改完密码后，关闭弹窗组件\n\t\t\t\t\tthat.visible &#x3D; false;\n\t\t\t\t\t&#x2F;&#x2F;调用父组件的logout函数登出\n\t\t\t\t\tthat.$parent.logout();\n\t\t\t\t&#125; else &#123;\n\t\t\t\t\tthis.$message(&#123;\n\t\t\t\t\t\tmessage: &#39;密码修改失败&#39;,\n\t\t\t\t\t\ttype: &#39;error&#39;,\n\t\t\t\t\t\tduration: 1200\n\t\t\t\t\t&#125;)\n\t\t\t\t&#125;\n\t\t\t&#125;)\n\t\t&#125;\n\t&#125;)\n&#125;</code></pre>\n\n\n\n<h2 id=\"后端：-2\"><a href=\"#后端：-2\" class=\"headerlink\" title=\"后端：\"></a>后端：</h2><h3 id=\"DAO-1\"><a href=\"#DAO-1\" class=\"headerlink\" title=\"DAO:\"></a>DAO:</h3><p>TbUserDao：<code>public int updatePassword(HashMap map);</code></p>\n<p>mapper：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;update id&#x3D;&quot;updatePassword&quot; parameterType&#x3D;&quot;HashMap&quot;&gt;\n    UPDATE tb_user\n    SET password&#x3D;HEX(AES_ENCRYPT(#&#123;newPassword&#125;,#&#123;username&#125;))\n    WHERE id&#x3D;#&#123;userId&#125;\n    AND password&#x3D;HEX(AES_ENCRYPT(#&#123;password&#125;,#&#123;username&#125;))\n&lt;&#x2F;update&gt;</code></pre>\n\n<h3 id=\"Service：\"><a href=\"#Service：\" class=\"headerlink\" title=\"Service：\"></a>Service：</h3><p>UserService:<code>public int updatePassword(HashMap map);</code></p>\n<p>UserServiceImpl：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Override\n   public int updatePassword(HashMap map) &#123;\n       int rows &#x3D; userDao.updatePassword(map);\n       return rows;\n   &#125;</code></pre>\n\n<h3 id=\"Controller：-1\"><a href=\"#Controller：-1\" class=\"headerlink\" title=\"Controller：\"></a>Controller：</h3><p>UpdatePasswordForm：</p>\n<p>后端对前端传入的数据进行验证</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Data\npublic class UpdatePasswordForm &#123;\n\n    @NotBlank(message &#x3D; &quot;password不能为空&quot;)\n    @Pattern(regexp &#x3D; &quot;^[a-zA-Z0-9]&#123;6,20&#125;$&quot;,message &#x3D; &quot;password不正确&quot;)\n    @Schema(description &#x3D; &quot;密码&quot;)\n    private String password;\n\n    @NotBlank(message &#x3D; &quot;newPassword不能为空&quot;)\n    @Pattern(regexp &#x3D; &quot;^[a-zA-Z0-9]&#123;6,20&#125;$&quot;,message &#x3D; &quot;newPassword不正确&quot;)\n    @Schema(description &#x3D; &quot;密码&quot;)\n    private String newPassword;\n&#125;</code></pre>\n\n<p>UserController：</p>\n<p>通过StpUtil.getLoginIdAsInt()获取到当前会话登陆的账号id</p>\n<p>将id，原密码，新密码封装进HashMap中，将其作为更新数据的条件，返回更新的数据条数</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@PostMapping(&quot;&#x2F;updatePassword&quot;)\n@Operation(summary &#x3D; &quot;修改密码&quot;)\npublic R updatePassword(@Valid @RequestBody UpdatePasswordForm form)&#123;\n    int userId &#x3D; StpUtil.getLoginIdAsInt();\n    HashMap map&#x3D;new HashMap()&#123;&#123;\n        put(&quot;userId&quot;,userId);\n        put(&quot;password&quot;,form.getPassword());\n        put(&quot;newPassword&quot;,form.getNewPassword());\n    &#125;&#125;;\n    int rows &#x3D; userService.updatePassword(map);\n    return R.ok().put(&quot;rows&quot;,rows);\n&#125;</code></pre>\n","feature":true,"text":"开发日记day01 环境：JDK15、SpringBoot、Vue、Redis、MySQL、RabbitMQ、MongoDB 数据库数据加密用到了 HEX(AES_ENCRYPT()) HEX():将一个字符串转换为十六进制格式的字符串 UNHEX():将十六进制格式的字符串转化...","link":"","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"Java","slug":"Java","count":3,"path":"api/categories/Java.json"},{"name":"Vue","slug":"Java/Vue","count":2,"path":"api/categories/Java/Vue.json"}],"tags":[{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"},{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"},{"name":"wx","slug":"wx","count":2,"path":"api/tags/wx.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%EF%BC%9A\"><span class=\"toc-text\">登录：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%EF%BC%9A\"><span class=\"toc-text\">前端：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#login-vue\"><span class=\"toc-text\">login.vue:</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template\"><span class=\"toc-text\">template:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#script%EF%BC%9A\"><span class=\"toc-text\">script：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%8E%E7%AB%AF%EF%BC%9A\"><span class=\"toc-text\">后端：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DAO\"><span class=\"toc-text\">DAO:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Service\"><span class=\"toc-text\">Service:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Controller\"><span class=\"toc-text\">Controller:</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%87%BA%EF%BC%9A\"><span class=\"toc-text\">登出：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%EF%BC%9A-1\"><span class=\"toc-text\">前端：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#main-vue\"><span class=\"toc-text\">main.vue:</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template%EF%BC%9A\"><span class=\"toc-text\">template：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#script%EF%BC%9A-1\"><span class=\"toc-text\">script：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%8E%E7%AB%AF%EF%BC%9A-1\"><span class=\"toc-text\">后端：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Controller%EF%BC%9A\"><span class=\"toc-text\">Controller：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%EF%BC%9A\"><span class=\"toc-text\">修改密码：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%EF%BC%9A-2\"><span class=\"toc-text\">前端：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#main-vue-1\"><span class=\"toc-text\">main.vue:</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-1\"><span class=\"toc-text\">template:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#script%EF%BC%9A-2\"><span class=\"toc-text\">script：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#update-password-vue%EF%BC%9A\"><span class=\"toc-text\">update-password.vue：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-2\"><span class=\"toc-text\">template:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#script%EF%BC%9A-3\"><span class=\"toc-text\">script：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%8E%E7%AB%AF%EF%BC%9A-2\"><span class=\"toc-text\">后端：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DAO-1\"><span class=\"toc-text\">DAO:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Service%EF%BC%9A\"><span class=\"toc-text\">Service：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Controller%EF%BC%9A-1\"><span class=\"toc-text\">Controller：</span></a></li></ol></li></ol></li></ol>","author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}},"mapped":true,"prev_post":{"title":"day02-用户管理模块","uid":"35fec71f027e3bb1983fb3c45c0e02de","slug":"day02-用户管理模块","date":"2022-07-06T11:33:17.000Z","updated":"2022-07-06T12:39:56.127Z","comments":true,"path":"api/articles/day02-用户管理模块.json","keywords":"Java study learn 学习","cover":null,"text":"用户管理模块 查询Title:条件查询 移动端-&gt;UserController:1.searchUserByPage UserController-&gt;UserService:2.searchUserByPage UserService-&gt;TbUserDao:3....","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"Java","slug":"Java","count":3,"path":"api/categories/Java.json"},{"name":"Vue","slug":"Java/Vue","count":2,"path":"api/categories/Java/Vue.json"}],"tags":[{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"},{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"},{"name":"wx","slug":"wx","count":2,"path":"api/tags/wx.json"}],"author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}},"feature":true},"next_post":{"title":"数组","uid":"e16187d7a3c490f96b788338bdd79d24","slug":"数组","date":"2022-07-02T12:24:10.000Z","updated":"2022-07-02T12:25:01.082Z","comments":true,"path":"api/articles/数组.json","keywords":"Java study learn 学习","cover":[],"text":"数组A.声明数组首先必须声明数组变量，才能在程序中使用数组。 dataType[] arrayRefVar; &#x2F;&#x2F; 首选的方法 或 dataType arrayRefVar[]; &#x2F;&#x2F; 效果相同，但不是首选方法 B.创建数组Java 语言使...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":8,"path":"api/categories/JavaSE.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"基础","slug":"基础","count":3,"path":"api/tags/基础.json"},{"name":"数组","slug":"数组","count":1,"path":"api/tags/数组.json"}],"author":{"name":"星桜","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"学习Java中","socials":{"github":"https://github.com/umrlll","twitter":"https://twitter.com/Smile_Amber234","stackoverflow":"","wechat":"","qq":"tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1414018493&website=www.oicqzone.com","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/24956413"}}}},"feature":true}}